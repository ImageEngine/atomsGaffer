import IECore

import Gaffer

import AtomsGaffer

import DocumentationAlgo

Gaffer.Metadata.registerNode(

    AtomsGaffer.AtomsCrowdGenerator,

    "description",
    """
    Generates a fully deformed crowd of agents by combining the input crowd points
    from the primary scene, and the specified agents from the right-hand scene.
    """,

    "icon", "atoms_logo.png",
    "documentation:url", DocumentationAlgo.documentationURL,

    plugs = {

        "parent" : [

            "description",
            """
			The location of the crowd points in the input scene. The
			per-vertex primitive variable "\agentType\" will be used
			to determine which agents to instantiate. It must contain
			indexed string data (ie. as generated by AtomsCrowdReader).
			"""

        ],

        "name" : [

            "description",
            """
            The name of the new location containing the generated agents.
            """,

        ],

        "variations" : [

            "description",
            """
			The scene containing the agent variation mesh to be applied to each agent skeleton of
			the crowd. Specify multiple variation by parenting them at the right agent type:

			- /soldier/soldierSword
			- /soldier/soldierSwordShield
			- /archer/defaultArcher
			
			Set up the lod using ':' after the variation name. Eg. /soldier/soldierSword:A

			Note that the variations are not limited to being a
			single object : they can each have arbitrary child
			hierarchies.
			""",

            "plugValueWidget:type", "",

        ],

        "useInstances" : [

            "description",
            """
            Turn on agent instancing. Agents with the same pose and metadata values are instanced.
            """,

        ],

        "boundingBoxPadding" : [

            "description",
            """
            Bounding box padding
            """,
            "layout:section", "Bounding Box",
            "label", "Padding"
        ],

    },

)
