import AtomsGaffer
import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 52, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["SubTree"] = GafferScene.SubTree( "SubTree" )
parent.addChild( __children["SubTree"] )
__children["SubTree"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"] = Gaffer.Box( "AgentLookdev" )
parent.addChild( __children["AgentLookdev"] )
__children["AgentLookdev"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["AgentLookdev"]["BoxIn"].addChild( GafferScene.ScenePlug( "__in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["BoxIn"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["AgentLookdev"]["BoxOut"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["BoxOut"].addChild( GafferScene.ScenePlug( "__out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["AgentLookdev"]["BoxIn1"].addChild( GafferScene.FilterPlug( "__in", defaultValue = 0, minValue = 0, maxValue = 7, flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.Cacheable, ) )
__children["AgentLookdev"]["BoxIn1"].addChild( GafferScene.FilterPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, minValue = 0, maxValue = 7, flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.Cacheable, ) )
__children["AgentLookdev"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.FilterPlug( "in1", defaultValue = 0, minValue = 0, maxValue = 7, flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.Cacheable, ) )
__children["AgentLookdev"].addChild( GafferScene.OpenGLShader( "FacingRatio" ) )
__children["AgentLookdev"]["FacingRatio"].loadShader( "FacingRatio" )
__children["AgentLookdev"]["FacingRatio"]["parameters"].addChild( Gaffer.Color3fPlug( "facingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["FacingRatio"]["parameters"].addChild( Gaffer.Color3fPlug( "grazingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["FacingRatio"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["AgentLookdev"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.OpenGLShader( "FacingRatio1" ) )
__children["AgentLookdev"]["FacingRatio1"].loadShader( "FacingRatio" )
__children["AgentLookdev"]["FacingRatio1"]["parameters"].addChild( Gaffer.Color3fPlug( "facingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["FacingRatio1"]["parameters"].addChild( Gaffer.Color3fPlug( "grazingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"]["FacingRatio1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.SetFilter( "SetFilter" ) )
__children["AgentLookdev"]["SetFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["AgentLookdev"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.SetFilter( "SetFilter1" ) )
__children["AgentLookdev"]["SetFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AgentLookdev"].addChild( GafferScene.Isolate( "Isolate" ) )
__children["AgentLookdev"]["Isolate"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AtomsCrowdReader"] = AtomsGaffer.AtomsCrowdReader( "AtomsCrowdReader" )
parent.addChild( __children["AtomsCrowdReader"] )
__children["AtomsCrowdReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AtomsCrowdGenerator"] = AtomsGaffer.AtomsCrowdGenerator( "AtomsCrowdGenerator" )
parent.addChild( __children["AtomsCrowdGenerator"] )
__children["AtomsCrowdGenerator"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AtomsAgentReader"] = AtomsGaffer.AtomsAgentReader( "AtomsAgentReader" )
parent.addChild( __children["AtomsAgentReader"] )
__children["AtomsAgentReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AtomsAttributes"] = AtomsGaffer.AtomsAttributes( "AtomsAttributes" )
parent.addChild( __children["AtomsAttributes"] )
__children["AtomsAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["start"].setValue( 0 )
parent["frameRange"]["end"].setValue( 1000 )
parent["frame"].setValue( 1000.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 38300 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["SubTree"]["in"].setInput( __children["AtomsCrowdGenerator"]["out"] )
__children["SubTree"]["root"].setValue( '/crowd/agents' )
__children["SubTree"]["includeRoot"].setValue( True )
__children["SubTree"]["__uiPosition"].setValue( imath.V2f( -8.61351204, -20.8872871 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/*Bot' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 19.9048023, 8.76243687 ) )
__children["Dot"]["in"].setInput( __children["AtomsCrowdReader"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot"]["in"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["Dot"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["Dot"]["out"].setInput( __children["Dot"]["in"] )
Gaffer.Metadata.registerValue( __children["Dot"]["out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["Dot"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -21.4789104, -5.39119434 ) )
__children["AgentLookdev"]["__uiPosition"].setValue( imath.V2f( 7.18648529, -4.39119434 ) )
__children["AgentLookdev"]["BoxIn"]["__in"].setInput( __children["AgentLookdev"]["in"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn"]["__in"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn"]["__in"], 'description', 'The processed output scene.' )
__children["AgentLookdev"]["BoxIn"]["out"].setInput( __children["AgentLookdev"]["BoxIn"]["__in"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["AgentLookdev"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -5.42546654, 23.0338135 ) )
__children["AgentLookdev"]["in"].setInput( __children["AtomsAttributes"]["out"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in"], 'noduleLayout:section', 'top' )
__children["AgentLookdev"]["BoxOut"]["in"].setInput( __children["AgentLookdev"]["ShaderAssignment1"]["out"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
__children["AgentLookdev"]["BoxOut"]["__out"].setInput( __children["AgentLookdev"]["BoxOut"]["in"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxOut"]["__out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
__children["AgentLookdev"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -5.42546654, -21.5302525 ) )
__children["AgentLookdev"]["out"].setInput( __children["AgentLookdev"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["out"], 'connectionGadget:color', imath.Color3f( 0.119999997, 0.150000006, 0.349999994 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["out"], 'noduleLayout:section', 'bottom' )
__children["AgentLookdev"]["BoxIn1"]["name"].setValue( 'in1' )
__children["AgentLookdev"]["BoxIn1"]["__in"].setInput( __children["AgentLookdev"]["in1"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn1"]["__in"], 'connectionGadget:color', None )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn1"]["__in"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn1"]["__in"], 'plugValueWidget:type', '' )
__children["AgentLookdev"]["BoxIn1"]["out"].setInput( __children["AgentLookdev"]["BoxIn1"]["__in"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["BoxIn1"]["out"], 'noduleLayout:section', 'left' )
__children["AgentLookdev"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( 10.6861477, 14.7017813 ) )
__children["AgentLookdev"]["in1"].setInput( __children["PathFilter"]["out"] )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in1"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in1"], 'connectionGadget:color', None )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in1"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in1"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["in1"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["FacingRatio"], 'nodeGadget:color', imath.Color3f( 0.250124961, 0.574999988, 0.114999987 ) )
__children["AgentLookdev"]["FacingRatio"]["parameters"]["facingColor"].setValue( imath.Color3f( 0, 0.400000006, 0 ) )
__children["AgentLookdev"]["FacingRatio"]["__uiPosition"].setValue( imath.V2f( -20.9379177, -2.59821844 ) )
__children["AgentLookdev"]["ShaderAssignment"]["in"].setInput( __children["AgentLookdev"]["Isolate"]["out"] )
__children["AgentLookdev"]["ShaderAssignment"]["filter"].setInput( __children["AgentLookdev"]["SetFilter"]["out"] )
__children["AgentLookdev"]["ShaderAssignment"]["shader"].setInput( __children["AgentLookdev"]["FacingRatio"]["out"] )
__children["AgentLookdev"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -5.42546654, -2.59821844 ) )
Gaffer.Metadata.registerValue( __children["AgentLookdev"]["FacingRatio1"], 'nodeGadget:color', imath.Color3f( 0.574999988, 0.197799996, 0.114999987 ) )
__children["AgentLookdev"]["FacingRatio1"]["parameters"]["facingColor"].setValue( imath.Color3f( 0.600000024, 0, 0 ) )
__children["AgentLookdev"]["FacingRatio1"]["__uiPosition"].setValue( imath.V2f( -21.597826, -11.7476568 ) )
__children["AgentLookdev"]["SetFilter"]["setExpression"].setValue( 'Sphere' )
__children["AgentLookdev"]["SetFilter"]["__uiPosition"].setValue( imath.V2f( 9.12300682, 5.2523427 ) )
__children["AgentLookdev"]["ShaderAssignment1"]["in"].setInput( __children["AgentLookdev"]["ShaderAssignment"]["out"] )
__children["AgentLookdev"]["ShaderAssignment1"]["filter"].setInput( __children["AgentLookdev"]["SetFilter1"]["out"] )
__children["AgentLookdev"]["ShaderAssignment1"]["shader"].setInput( __children["AgentLookdev"]["FacingRatio1"]["out"] )
__children["AgentLookdev"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( -5.42546368, -11.7476568 ) )
__children["AgentLookdev"]["SetFilter1"]["setExpression"].setValue( 'Cube' )
__children["AgentLookdev"]["SetFilter1"]["__uiPosition"].setValue( imath.V2f( 9.42300606, -5.94765806 ) )
__children["AgentLookdev"]["Isolate"]["in"].setInput( __children["AgentLookdev"]["BoxIn"]["out"] )
__children["AgentLookdev"]["Isolate"]["filter"].setInput( __children["AgentLookdev"]["BoxIn1"]["out"] )
__children["AgentLookdev"]["Isolate"]["__uiPosition"].setValue( imath.V2f( -5.42546654, 14.7017813 ) )
__children["AtomsCrowdReader"]["__uiPosition"].setValue( imath.V2f( -21.4789104, 15.4012585 ) )
__children["AtomsCrowdGenerator"]["in"].setInput( __children["Dot"]["out"] )
__children["AtomsCrowdGenerator"]["parent"].setValue( '/crowd' )
__children["AtomsCrowdGenerator"]["agents"].setInput( __children["AgentLookdev"]["out"] )
__children["AtomsCrowdGenerator"]["attributes"].setValue( 'agentType' )
__children["AtomsCrowdGenerator"]["__uiPosition"].setValue( imath.V2f( -8.61351109, -12.8911943 ) )
__children["AtomsAgentReader"]["__uiPosition"].setValue( imath.V2f( 5.77255964, 15.4694548 ) )
__children["AtomsAttributes"]["in"].setInput( __children["AtomsAgentReader"]["out"] )
__children["AtomsAttributes"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["AtomsAttributes"]["__uiPosition"].setValue( imath.V2f( 5.77255917, 4.10880566 ) )


del __children

